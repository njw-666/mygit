"""
Django settings for Demo project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# --file 当前文件的路径
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# 密钥
SECRET_KEY = '8f-lea=3*f71jk*gf*of^qp-fe7&@mke8&*ywne(r@qs^8=(ya'

# SECURITY WARNING: don't run with debug turned on in production!
# 1.当代码发生改变的时候，自动重启项目
# 2.在客户端和控制台显示报错内容
DEBUG = True
# 允许访问的名单，白名单
ALLOWED_HOSTS = []


# Application definition
# 注册子应用
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app01',
    'app01.templatetags',
]
# 中间件
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# 路由的根目录，根路由的地址
ROOT_URLCONF = 'Demo.urls'
# django 模板的配置
TEMPLATES = [
    {
        ## django的模板引擎
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
# 'BACKEND': 'django.template.backends.jinja2',  ## jinja2的模板引擎 flask
        # 模板文件的目录配置  列表
        'DIRS': [os.path.join(BASE_DIR,"templates")],
## APP_DIRS 设置是否在子应用中自动寻找模板内容
      ## 为True 自动从子应用中寻找模板内容

        'APP_DIRS': True,
## 是一些针对后端的设置
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# django 的内置服务器，使用wsgi服务的路径
WSGI_APPLICATION = 'Demo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
# 数据库的配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation

# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
# 权限认证，权限设置
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/
# 语言
LANGUAGE_CODE = 'en-us'
# 时区
TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True
# 是否使用默认的时区，true使用为django内置的，false使用为自己设置的
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
# 静态文件的配置
# 静态文件的路由
STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR,"static"),
)
